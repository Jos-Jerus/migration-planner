// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYT2/bNhT/KgK3oxQ7aXcxsEOStquxJguatT0UOTDis81GIjXyyW5W6LsPJEVLlijZ",
	"SZNhG3ZKYL4/v/f/PX0jqcwLKUCgJrNvRKcryKn993QJAs0/hZIFKORgf04VUAR2ap8WUuUUyYwwipAg",
	"z4HEBO8LIDOiUXGxJFVsWBgI5DT7oDLD1qPgbEdaWXIWEqSRYmlRgChzMvtMhMQklUJAimBYNpQjF8tk",
	"IVXSqNUkJqCUVCQmS4orMAITLrh5TLhYg0Cp7klMyiJBmRhrSEy0LFUKyVIKIDeDcOZiIYNGlQV7qKfW",
	"oDSXIiCuiomCP0qugBm7rX9qd+wA6Xo7bgWsDanR1Vgmb79AigaHjf21lfrBsgTzYCyoMfmaSFrwJJUM",
	"liAS+IqKJkiXlntNM+7kbs2KS5VZO53b5wekxCOUbIVXO/n0/XKdqGpPWjxCck6//nwynVrRg/nxaLmk",
	"6qbWYVnlkbTCFUqkVxSpRqkCCcS4vnNB7pXBQgGc04KmHO9/OWuRcIGwBGVoVlSxDVVwmqaQgTJpfSHX",
	"0CK+lTIDKgxxLhmEO0+hJMpUZr/bhwABSqTZPjA4xL0GwaTaX8/2ta+s54qtxNj7b9gTHeO8F0Jhem2b",
	"Yy9EOWhNl9YyBjpVvECbfY4+8s/xHuM83U0Vk7dco1wqmgcSgiI1fzlCrsf8TKhS9N7GlYuPNCshTK0R",
	"itBLF54XUnPEDknIT2+lDozE4ew6NPzboA6HaC4WigbacFZqBKWvQJlaS0EgqAd6kfki1TuMPypYkBn5",
	"YdKsCJN6P5g0dR2Qt5Iar+QGlJkgTihljJvcodnVDvxBcI3hRtrhwGyEBjAZJ507fz3QQwJwI9Xd4TAu",
	"HUNIlqvxOmwD6g1JE84xqrfeO3uSvEXchdB3Tj+ELRfs5Es4U/0+1ctW7pN4zHcu0031NNk8Rv/x3JEZ",
	"jv2R+Xih++VXK3IC4hpmyLZ39NaV+q5dd3D/JDM5s+LtpO+0te+X2bHZQPZqQpZe8KWipmTnWpeB8U21",
	"Bq3z+kbo7/yy3Hlp5S0PD/3Mu3a8VTqyuK3fawuZ4QuxP23WesMxXQWxCJoPbAP1oPf3h0YqGFXMzWNU",
	"/LZ0h8hWfExKocuikMo8hM6IdUZFcBEK7wgWW8jUa7uIBSLlD7mxsnDXXhU/5r478Hrj7b4w3gA8oU+L",
	"wxuvK9BQCx8KqRRXCnKudwZSa3d88BkXOtWs9uFbrIVhOLLj95iN8vz5ItG1qnU0e9Uh6L4590cBO+jK",
	"Dcq8eA/u6jhTQO+Y3Ii+/FV70RzdGLaEfqaOjNs3UrnGSG8zOJTuE8fVJ6oEF0s9znMpcVx8x0GNkR56",
	"EOdeUEMIwt7XgTW0KM/9Ajk+ffuhq9wtc+4nxiP53W32CObcT7p2jA5qNp0ZGeo6PP0eu0Q7Gu+Baime",
	"Ep184G7OoFCQmq5FZqhKCGSH3H74GBI7BrnmDp0BxZMdFIrmj86Vff3hoOZweGcILfGkrypu6s+bt62J",
	"dnHZiO+6ciDHQlVxMxruTj8YXv+aZSgwbjsGpzXs0ALlQVR2oDkQGU9BaOt7N+/JaUHTFUQnR1MzclVG",
	"ZmSFWOjZZLLZbI6ofT6SajmpefXk3fz89eX16+TkaHq0wtxtExxNSJutOLrKqBCgotOreZREdgRGIFgh",
	"uWh/XZ2RUjBYcAHM+qsAQQtOZuTF0fTo2ASD4sq6bEILPlkfT6woPfnGWTVpPlAWJfY/w7hdIHJUkVxE",
	"uAIHhVhVdfmzLWnru65VrWgO7sD83JU9f7UjjZvfDFa/zMzcYtNEyzUEVz8HbCHVjWMGjWeS3bukEViv",
	"qrQoMp5a+JMv2n3xbETvXWR3VqWqvn10IUW95Z1Mp31v/varidDJ9Hjo6aXjehKY7oubRbar6oyy6L3z",
	"i9N5/Pw6Pwha4koq/qfL0pfTF8+v9I1Ut5wxEE7jy+fXeCkxWshSWBt/+juCOTe7r6BZdA1qDSryhDFx",
	"F/vn+ji7MT/5BuDGzkM6gLalul3JTSegkRMz0AjcRTFvLfH7mkHdXbZS/zUNIXA8dT6GGKADHeIJEYTy",
	"4/++8h/pK2/+YW2lLtMby6wtlatrtwJNSHVT/RUAAP//vLSoovwfAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
