// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
